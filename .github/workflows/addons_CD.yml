name: Odoo extra-addons CICD
run-name: Build and Deploy extra-addons by ${{ github.actor }}
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  Build_and_Test_addons:
    runs-on: ubuntu-latest  # 使用Ubuntu Runner虛擬環境

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # 檢出代碼到工作目錄

    - name: docker compose build
      run: |
        docker-compose build

    - name: docker compose up
      run: |
        docker-compose up -d

    - name: Wait for health checks
      run: |
        count=0
        while [[ "$count" -lt 10 ]]; do
          sleep 10
          health_check_status=$(docker ps --format "{{.Names}} {{.Status}}" | awk '{print $2}')
          if [[ "$(echo "$health_check_status" | awk '/odoo-web|odoo-db/ {print $1}' | uniq -d | wc -l)" -eq 2 ]]; then
            echo "Both containers are healthy"
            break
          fi
          count=$((count + 1))
          echo "Waiting for containers to become healthy..."
        done
        if [[ "$count" -eq 10 ]]; then
          echo "Containers did not become healthy in time"
          exit 1
        fi

    - name: manually wait for hapi-fhir
      run: |
        max_retries=5
        retry_interval=10
        retry_count=0
        url="http://localhost:8080/fhir"

        while true; do
            response=$(curl -s -o /dev/null -w "%{http_code}" $url)
            if [[ $response -eq 200 ]]; then
                echo "Response 200 OK"
                break
            else
                if [[ $retry_count -lt $max_retries ]]; then
                    echo "Response not 200, retrying in $retry_interval seconds..."
                    sleep $retry_interval
                    retry_count=$((retry_count+1))
                else
                    echo "Max retries exceeded"
                    exit 1
                fi
            fi
        done
        
    - name: Stop Docker Compose
      run: docker-compose down


  # Package_to_DockerHub:
  #   needs: Test_addons
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4  # 檢出代碼到工作目錄

  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
      
  #   - name: Build and push
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: https://github.com/hank1224/odoo_landseed_HIS/tree/docker-compose_env
  #       file: ./Dockerfile
  #       push: true
  #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/odoo_landseed_his:latest

  # Depolyment:
  #   needs: [Test_addons, Package_to_DockerHub]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up Azure CLI
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}